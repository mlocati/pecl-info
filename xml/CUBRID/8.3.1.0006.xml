<?xml version="1.0" encoding="UTF-8"?>
<package packagerversion="1.9.1" version="2.0" xmlns="http://pear.php.net/dtd/package-2.0" xmlns:tasks="http://pear.php.net/dtd/tasks-1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pear.php.net/dtd/tasks-1.0 http://pear.php.net/dtd/tasks-1.0.xsd http://pear.php.net/dtd/package-2.0 http://pear.php.net/dtd/package-2.0.xsd">
 <name>CUBRID</name>
 <channel>pecl.php.net</channel>
 <summary>This is the official PHP Extension to connect to CUBRID Database.</summary>
 <description>CUBRID is an open source database management system highly optimized for Web applications (http://www.cubrid.org). The current PHP extension is fully compatibly with the latest stable version of CUBRID Database. To post issues and report bugs, please use CUBRID Official Forum at http://forum.cubrid.org.</description>
 <lead>
  <name>Esen Sagynov</name>
  <user>CUBRID</user>
  <email>esen.sagynov@nhn.com</email>
  <active>yes</active>
 </lead>
 <date>2011-04-08</date>
 <time>16:59:56</time>
 <version>
  <release>8.3.1.0006</release>
  <api>8.3.1</api>
 </version>
 <stability>
  <release>stable</release>
  <api>stable</api>
 </stability>
 <license uri="http://www.php.net/license">PHP</license>
 <notes>
- Add support for named placeholder for prepare statement;
- cubrid_lob_size returns lob size as a string, because it can&apos;t return 64-bit integer from php extension. 

Fixed bugs:

- Fix a bug in cubrid_insert_id: max precision of insert id is 38, so it shouldn&apos;t return the value as integer, use string instead;
- Fix a bug about BLOB/CLOB: When inserting LOB data, if the data size is large enough, it will fails. If the LOB data is in a file, and it is too large to be put into memory, you can bind a file path name when binding the LOB data.
 </notes>
 <contents>
  <dir name="/">
   <file md5sum="83d1c567fc619477af5ce0a19510f545" name="win/php_cubrid.sln" role="src" />
   <file md5sum="769fdd8cd3d7e0cbce55b92903bda588" name="win/php_cubrid.vcproj" role="src" />
   <file md5sum="7c108dc1965c782a9b91f08e6cb7b6df" name="config.m4" role="src" />
   <file md5sum="811067abe7a4fbe9bfea53bce3fdd27b" name="config.w32" role="src" />
   <file md5sum="366e6e4e3522e994657ef0a9072a168c" name="php_cubrid.c" role="src" />
   <file md5sum="062446aa7ad394bebff667894103d666" name="php_cubrid.h" role="src" />
   <file md5sum="7d1358dab1496b95ea8e6e9cec8230d9" name="php_cubrid_version.h" role="src" />
   <file md5sum="f738b80e679d8c3b7739b40f7f455e07" name="php_cubrid.dsp" role="src" />
   <file md5sum="764b0eaca77465da5052adfc60aee46f" name="README" role="doc" />
   <file md5sum="597eb6445069eaf8df0d4e12ca3ac154" name="build-guide.html" role="doc" />
   <file md5sum="00845ffa5813fa41ae5a8730826cf7e5" name="release-notes.html" role="doc" />
  </dir>
 </contents>
 <dependencies>
  <required>
   <php>
    <min>5.2.0</min>
   </php>
   <pearinstaller>
    <min>1.4.0</min>
   </pearinstaller>
  </required>
 </dependencies>
 <providesextension>CUBRID</providesextension>
 <extsrcrelease>
  <configureoption default="autodetect" name="with-cubrid" prompt="CUBRID base install dir" />
 </extsrcrelease>
 <changelog>
  <release>
   <version>
    <release>8.3.1.0005</release>
    <api>8.3.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="http://www.php.net/license">PHP</license>
   <notes>
- Use long long to store lob size. 
     
The data type of BLOB/CLOB size is long long, but it can&apos;t return long long
from PHP extension function. After tring serveral methods, I find that
cubrid_lob_size should return a string just as PDO does. I will fix this
problem in CUBRID PHP R4.0 release.

- Fix a bug which may casue memory leak: After calling array_init(return_value), if error occures, it should destroy the array before returning false;
- Fix a bug in cubrid_bind: When the value of binding parameter is NULL, it will covert the value to empty string;
- Fix a bug in cubrid_real_escape string: When escaping single quote in string, it should use double single quotes, not backslash.
   </notes>
  </release>
  <release>
   <version>
    <release>8.3.1.0004</release>
    <api>8.3.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="http://www.php.net/license">PHP</license>
   <notes>
- zend_long64 don&apos;t exist in php-5.2.x, use size_t for LOB size instead.
   </notes>
  </release>
  <release>
   <version>
    <release>8.3.1.0003</release>
    <api>8.3.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="http://www.php.net/license">PHP</license>
   <notes>
- use zend_long64 to store LOB data size, not long.
   </notes>
  </release>
  <release>
   <version>
    <release>8.3.1.0002</release>
    <api>8.3.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="http://www.php.net/license">PHP</license>
   <notes>
- fix a bug in cubrid_fetch_object : cubrid_fetch_object can&apos;t work with php-5.2.x.
- fix a bug in cubrid_bind : blob/clob data won&apos;t be binded correctly, which will cause cubrid_execute fail&quot;
   </notes>
  </release>
  <release>
   <version>
    <release>8.3.1.0001</release>
    <api>8.3.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="http://www.php.net/license">PHP</license>
   <notes>
2008 R3.1 Release

This release is a major release. CUBRID 3.1 Stable has been released. Several new 
features have been added to this version including new BLOB and CLOB data types and 
new APIs in JDBC/CCI which can get foreign key information. Accordingly new functions 
and features are added in this CUBRID PHP version, and some bugs have been fixed.

Functionality added:

- Add more CUBRID-MySQL Compatibility functions:

  cubrid_query
  cubrid_close
  cubrid_error
  cubrid_errno
  cubrid_client_encoding
  cubrid_fetch_array
  cubrid_db_name
  cubrid_ping

- Add Lob related functions:

  cubrid_lob_get
  cubrid_lob_close
  cubrid_lob_size
  cubrid_lob_export
  cubrid_lob_send

Functionality removed:

Glo data type has been removed from CUBRID 3.1, BLOB/CLOB can be used to replace it. So 
removed Glo related functions:

  cubrid_new_glo
  cubrid_save_to_glo
  cubrid_load_from_glo
  cubrid_send_glo

Changed and Enhanced Features:

- Add three new schema type integer constants for cubrid_schema: 

  CUBRID_SCH_IMPORTED_KEYS
  CUBRID_SCH_EXPORTED_KEYS
  CUBRID_SCH_CROSS_REFERENCE

  They can be used to get foreign key information. 

- cubrid_bind support BLOB and CLOB data types.

- cubrid_unbuffered_query now is worthy of its name. It won&apos;t need to wait 
  for that all query results have been complete. It will return when the 
  results are being generated, so you can&apos;t use cubrid_num_rows and 
  cubrid_data_seek on a result set returned from cubrid_unbuffered_query.

- cubrid_fetch_object: Add new parameters class_name and params, which can 
  pass the name of class to instantiate and the constructor for class_name objects.

- When cubrid_schema and cubrid_col_size fails, return false instead of -1.

Fixed bugs:

- last db connetion/request resource management: If there is no variable to refer these resources, they will be removed by garbage collector.
- cubrid_execute: If cubrid fails to get result info after executing sql statement, there may be memory leak.
- cubrid_disconnect: When disconnecting any db connection, it will always reset the last request and connection info.
- cubrid_unbuffered_query: When query execution fails, it don&apos;t free the allocated request resource.
   </notes>
  </release>
  <release>
   <version>
    <release>8.3.0.0005</release>
    <api>8.3.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="http://www.php.net/license">PHP</license>
   <notes>
- enhance cubrid_fetch_object : make it compitible with mysql_fetch_object.
- enhance cubrid_unbuffered_query : make it worthy of the name, unbuffered query.

- fix a bug in cubrid_execute : if cubrid fails to get result info, there may be memory leak.
- fix a bug in cubrid_disconnect : When disconnecting any db connection, it will always reset the last request and connection info.
- fix a bug in last db connect/request life cycle management : if there is no var to refer these resources, then they will be removed by garbage collector.
- fix a bug in cubrid_unbuffered_query which can cause memory leak : when query execution fails, it don&apos;t free the allocated request resource.
   </notes>
  </release>
  <release>
   <version>
    <release>8.3.0.0004</release>
    <api>8.3.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="http://www.php.net/license">PHP</license>
   <notes>
- Fix a bug in cubrid_put: Under x64 system, there will be memory overflow in cubrid_put when given the the attr name as the third param.
   </notes>
  </release>
  <release>
   <version>
    <release>8.3.0.0003</release>
    <api>8.3.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="http://www.php.net/license">PHP</license>
   <notes>
- Add a new function cubrid_fetch_array
   </notes>
  </release>
  <release>
   <version>
    <release>8.3.0.0002</release>
    <api>8.3.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="http://www.php.net/license">PHP</license>
   <notes>
- fix an installation bug in config.m4
   </notes>
  </release>
  <release>
   <version>
    <release>8.3.0.0001</release>
    <api>8.3.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="http://www.php.net/license">PHP</license>
   <notes>
This release is a major release. All codes has been reviewed, and totally rewritten with latest Zend Engine 2 API.

- Added more than 20 new APIs, see release-notes.html in package for more details.
- Added two new schema types for cubrid_schema: CUBRID_SCH_DIRECT_SUPER_CLASS and CUBRID_SCH_PRIMARY_KEY.
- More data types support for cubrid_bind, the following types are added: CHAR, VARCHAR, BIGINT, MONETARY, VARBIT and DATETIME.
- Fix a bug in cubrid_get: If parameter attr is given and its type is string, and the function returns successfully, then there will be memory leak.
   </notes>
  </release>
 </changelog>
</package>

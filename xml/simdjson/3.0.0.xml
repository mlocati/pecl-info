<?xml version="1.0" encoding="UTF-8"?>
<package packagerversion="1.10.13" version="2.0" xmlns="http://pear.php.net/dtd/package-2.0" xmlns:tasks="http://pear.php.net/dtd/tasks-1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pear.php.net/dtd/tasks-1.0 http://pear.php.net/dtd/tasks-1.0.xsd http://pear.php.net/dtd/package-2.0 http://pear.php.net/dtd/package-2.0.xsd">
 <name>simdjson</name>
 <channel>pecl.php.net</channel>
 <summary>Provides faster json decoding through simdjson bindings for PHP</summary>
 <description>Provides faster json decoding through simdjson bindings for PHP (Single Instruction, Multiple Data)</description>
 <lead>
  <name>Tyson Andre</name>
  <user>tandre</user>
  <email>tandre@php.net</email>
  <active>yes</active>
 </lead>
 <date>2022-10-17</date>
 <time>13:13:26</time>
 <version>
  <release>3.0.0</release>
  <api>3.0.0</api>
 </version>
 <stability>
  <release>stable</release>
  <api>stable</api>
 </stability>
 <license uri="https://www.apache.org/licenses/LICENSE-2.0.html">Apache 2.0</license>
 <notes>
* Add SimdJsonValueError. In php 8.0+, it extends ValueError, and it extends Error in older php versions.
  This provides an API similar to the JSON module, which started throwing ValueError for invalid depths in php 8.0.
* Throw SimdJsonValueError instead of emitting notices if $depth is too small or too large in all simdjson PHP functions.
  simdjson_is_valid(), simdjson_key_count() and simdjson_key_exists() now have non-null return types.
* Throw a SimdJsonException in simdjson_key_exists on error conditions such as invalid json, to be consistent with other simdjson PHP functions.
* Add an optional boolean `$throw_if_uncountable = false` to simdjson_key_count.
  When this is overridden to be true, simdjson_key_count will throw a SimdJsonException if the JSON pointer refers to a value that exists but is neither an array nor an object instead of returning 0.
* Rename the parameter $assoc to $associative in simdjson_decode and simdjson_key_value, to match naming practices used in json_decode()
 </notes>
 <contents>
  <dir name="/">
   <file md5sum="37670e544e16e277eecd90ae448fbe8c" name="src/simdjson_bindings.cpp" role="src" />
   <file md5sum="855c0e910daff21d77bd0a7b7a5e73b1" name="src/simdjson_bindings_defs.h" role="src" />
   <file md5sum="7929680c592b64808ca3485bfe6e5343" name="src/simdjson.cpp" role="src" />
   <file md5sum="a746b66269d9de8a532e01bf7f0b9a5a" name="src/simdjson.h" role="src" />
   <file md5sum="cfb916b0526d86beda02a6ef07162b2e" name="tests/compat/001.phpt" role="test" />
   <file md5sum="ccbafe3d85a64882b1a205cb4de5270e" name="tests/compat/bug41067.phpt" role="test" />
   <file md5sum="5adfa7de5e6c67d471431a1adf090f65" name="tests/compat/bug41504.phpt" role="test" />
   <file md5sum="ceed35ac41e594da70f57b77bcbdc583" name="tests/compat/bug45791.phpt" role="test" />
   <file md5sum="85e97e501cbcaf01980f9ac2d8453af9" name="tests/compat/bug47644.phpt" role="test" />
   <file md5sum="72986642cec132233ec46ad29efb6678" name="tests/compat/bug50224.phpt" role="test" />
   <file md5sum="8c650269edf8949470a5e06d8d2e641f" name="tests/compat/bug62010.phpt" role="test" />
   <file md5sum="f4fadb8a50e3002155d0f11abfcdea65" name="tests/compat/bug64874_part1.phpt" role="test" />
   <file md5sum="be4a223c22b5dbd6e9efb90f55ebfe50" name="tests/compat/bug64874_part2.phpt" role="test" />
   <file md5sum="c2921ae5482b15409924edc4109eb825" name="tests/compat/bug68546.phpt" role="test" />
   <file md5sum="f15a388c01d4f4d3d23b2b897f39667f" name="tests/compat/bug68817.phpt" role="test" />
   <file md5sum="205f84ba97d9a80ea204129e4f01a4d8" name="tests/compat/bug68938.phpt" role="test" />
   <file md5sum="ffac47fe0d913f58d107a701398d1901" name="tests/compat/bug69187.phpt" role="test" />
   <file md5sum="fd6fe1743e23e1ac2b41cfdd3bc305c7" name="tests/compat/fail001.phpt" role="test" />
   <file md5sum="47245262e8ee42fc914cc53b34f609f4" name="tests/compat/json_decode_basic.phpt" role="test" />
   <file md5sum="f80c7df3d7045466e260c8bd687612d1" name="tests/compat/json_decode_invalid_utf8.phpt" role="test" />
   <file md5sum="0bf6aecd8fe43cdb107031e093c60a8f" name="tests/compat/pass001.1_64bit.phpt" role="test" />
   <file md5sum="44510b1bf3fafe83448be8587f41242f" name="tests/compat/pass001.1.phpt" role="test" />
   <file md5sum="a87b32e8752e3a945f622a6cbf689f1e" name="tests/compat/pass001.phpt" role="test" />
   <file md5sum="c6f8682e7d480c4474759ed2f33e7346" name="tests/compat/pass002.phpt" role="test" />
   <file md5sum="37368ddd32801bd89c02ba0e6a646ac7" name="tests/compat/pass003.phpt" role="test" />
   <file md5sum="f04249294b0172b32a9ca1f48cb1a385" name="tests/32bit_support.phpt" role="test" />
   <file md5sum="1e00691d536862702e91412a07901265" name="tests/64bit_support.phpt" role="test" />
   <file md5sum="a428294ca6ca5981022991afa3650f9f" name="tests/decode_args.phpt" role="test" />
   <file md5sum="1ba223fe4c2afeacf5fde37f1c667985" name="tests/decode_exception.phpt" role="test" />
   <file md5sum="5ffaf644ec6115662e0720b21150a9c9" name="tests/decode_integer_overflow.phpt" role="test" />
   <file md5sum="d3aa3c82e8ee2d70019a09a07c997e0f" name="tests/decode_invalid_property.phpt" role="test" />
   <file md5sum="e83efb0b6a1bdbbf54081cf4b5a8f995" name="tests/decode_max_depth.phpt" role="test" />
   <file md5sum="ba82cc5954ff99f702f8b6a889aee883" name="tests/decode_max_depth_memory_reduction.phpt" role="test" />
   <file md5sum="198c215b43b146c6ea48d586c3118c8c" name="tests/decode_repeat.phpt" role="test" />
   <file md5sum="5bc50299c37c923db0d7ec439069f110" name="tests/decode_result.phpt" role="test" />
   <file md5sum="5a559a08808dcff5351ed06896b2de04" name="tests/decode_strict_types.phpt" role="test" />
   <file md5sum="fc820e5d140e8b4b774af0f359fbcfc2" name="tests/decode_types.phpt" role="test" />
   <file md5sum="466ed76f0d0cdc046a7168459861391d" name="tests/depth.phpt" role="test" />
   <file md5sum="0feb6608770ba0957d0ce96498786ed7" name="tests/dump.inc" role="test" />
   <file md5sum="f90f175708e4a53a7b04948f6f39d8b3" name="tests/is_valid.phpt" role="test" />
   <file md5sum="b6ed84291609c840af48810bd7ca4880" name="tests/is_valid_args.phpt" role="test" />
   <file md5sum="b87a6fc07c075ecf9018845057794801" name="tests/key_count.phpt" role="test" />
   <file md5sum="f9b00deda2f12fff306ba5347cecb414" name="tests/key_count_args.phpt" role="test" />
   <file md5sum="126eb22960c4dba6bfe30666a6ba4f92" name="tests/key_count_exception.phpt" role="test" />
   <file md5sum="4bf4d4da3c1015bc031921b8f730af21" name="tests/key_exists.phpt" role="test" />
   <file md5sum="1b05a103ff9fc804907f4d37ebe817a9" name="tests/key_exists_args.phpt" role="test" />
   <file md5sum="119b1376722c68b73e94c01dc9c8a746" name="tests/key_value_args.phpt" role="test" />
   <file md5sum="1b089987001cac193e19bef4fc4a2537" name="tests/key_value_deep_string.phpt" role="test" />
   <file md5sum="45cd9f1693c267ad5b34c030e3ffc9b4" name="tests/key_value_exception.phpt" role="test" />
   <file md5sum="ab965d565f9817fa8a9de5c3ff868d3a" name="tests/key_value_int.phpt" role="test" />
   <file md5sum="7d108869ab76fe3c9e54bbce7b056bc9" name="tests/key_value_result.phpt" role="test" />
   <file md5sum="6a13a39e0fbebda7e6b8c37ce0dd3cf8" name="tests/uint64_overflow.phpt" role="test" />
   <file md5sum="6716c344af0710d657bfdebd4ad27f79" name="tests/_files/result.json" role="test" />
   <file md5sum="8428c66500069fee510a306ecdad8c1d" name="CMakeLists.txt" role="src" />
   <file md5sum="2180550008311ef79f55a2539e142220" name="config.m4" role="src" />
   <file md5sum="5a7d2e839e9984ee63799216ba7d56fc" name="config.w32" role="src" />
   <file md5sum="86b6e048c1b86fedd7ead13152dcb251" name="CREDITS" role="doc" />
   <file md5sum="3b83ef96387f14655fc854ddc3c6bd57" name="LICENSE" role="doc" />
   <file md5sum="fef6bc48ada8a5069e4ba39d2ae8aa5c" name="php_simdjson.h" role="src" />
   <file md5sum="07accef00a6ee57393d04d34c4464236" name="php_simdjson.cpp" role="src" />
   <file md5sum="5eb9840fe97b8e3d880d514f94f8cfac" name="README.md" role="doc" />
   <file md5sum="6b007b3bec2e877f99a174efbcdeb783" name="simdjson.stub.php" role="src" />
   <file md5sum="79cd77bd66c8c053dd888742ad44a0e9" name="simdjson_arginfo.h" role="src" />
  </dir>
 </contents>
 <dependencies>
  <required>
   <php>
    <min>7.0.0</min>
   </php>
   <pearinstaller>
    <min>1.4.3</min>
   </pearinstaller>
  </required>
 </dependencies>
 <providesextension>simdjson</providesextension>
 <extsrcrelease />
 <changelog>
  <release>
   <date>2022-10-14</date>
   <version>
    <release>2.1.0</release>
    <api>2.1.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="https://www.apache.org/licenses/LICENSE-2.0.html">Apache 2.0</license>
   <notes>
* Allow out of range 64-bit values in JSON integer syntax and allow floating point values outside of the max/min finite floating point values (i.e. parsing to +/- infinity).

  This allows simdjson_decode() to be used as a replacement for json_decode() in more use cases.
* Return the correct value in simdjson_key_count() for JSON pointers to arrays/objects exceeding size 0xFFFFFF.
  Previously, this would be limited to returning at most 0xFFFFFF(16777215).
* Throw &apos;SimdJsonException extends RuntimeException&apos; instead of RuntimeException.
* Set the error code from simdjson as SimdJsonException-&gt;getCode()
* Expose error_code constants from simdjson as `SIMDJSON_ERR_$ERRCODENAME`
   </notes>
  </release>
  <release>
   <date>2022-10-01</date>
   <version>
    <release>2.0.5</release>
    <api>2.0.5</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="https://www.apache.org/licenses/LICENSE-2.0.html">Apache 2.0</license>
   <notes>
* Reuse PHP&apos;s 1-byte and 0-byte interned strings in simdjson_decode, reducing memory usage for those strings. (e.g. for the key/value in &apos;{&quot;x&quot;:&quot;&quot;}&apos;)
   </notes>
  </release>
  <release>
   <date>2022-10-01</date>
   <version>
    <release>2.0.4</release>
    <api>2.0.4</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="https://www.apache.org/licenses/LICENSE-2.0.html">Apache 2.0</license>
   <notes>
* Add `-fvisibility=hidden` to compiler options to reduce compiled extension size by avoiding exporting symbols by default.
* If the requested json parsing $depth is excessively large when reallocating larger buffers for the C simdjson parser,
  then internally use a smaller $depth that would behave identically with lower memory usage. (#66)
* Update simdjson to fix handling of surrogate pairs with invalid low surrogate.
   </notes>
  </release>
  <release>
   <date>2022-08-30</date>
   <version>
    <release>2.0.3</release>
    <api>2.0.3</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="https://www.apache.org/licenses/LICENSE-2.0.html">Apache 2.0</license>
   <notes>
* Fix error validating package.xml when uploading to PECL due to blank username of lead without a PECL account.
   </notes>
  </release>
  <release>
   <date>2022-08-30</date>
   <version>
    <release>2.0.2</release>
    <api>2.0.2</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="https://www.apache.org/licenses/LICENSE-2.0.html">Apache 2.0</license>
   <notes>
* Fix license metadata in package.xml
   </notes>
  </release>
  <release>
   <date>2022-08-29</date>
   <version>
    <release>2.0.1</release>
    <api>2.0.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="https://www.apache.org/licenses/LICENSE-2.0.html">Apache 2.0</license>
   <notes>
* On 32-bit builds, convert decoded 64-bit integers to floats if they would be out of range.
   </notes>
  </release>
  <release>
   <date>2022-08-15</date>
   <version>
    <release>2.0.0</release>
    <api>2.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="https://www.apache.org/licenses/LICENSE-2.0.html">Apache 2.0</license>
   <notes>
* Initial PECL release
   </notes>
  </release>
 </changelog>
</package>

<?xml version="1.0" encoding="ISO-8859-1"?>
<package packagerversion="1.9.5" version="2.0" xmlns="http://pear.php.net/dtd/package-2.0" xmlns:tasks="http://pear.php.net/dtd/tasks-1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pear.php.net/dtd/tasks-1.0 http://pear.php.net/dtd/tasks-1.0.xsd http://pear.php.net/dtd/package-2.0 http://pear.php.net/dtd/package-2.0.xsd">
 <name>redis</name>
 <channel>pecl.php.net</channel>
 <summary>PHP extension for interfacing with Redis</summary>
 <description>This extension provides an API for communicating with Redis servers.</description>
 <lead>
  <name>Michael Grunder</name>
  <user>mgrunder</user>
  <email>michael.grunder@gmail.com</email>
  <active>yes</active>
 </lead>
 <lead>
  <name>Nicolas Favre-Felix</name>
  <user>nff</user>
  <email>n.favrefelix@gmail.com</email>
  <active>yes</active>
 </lead>
 <date>2016-06-08</date>
 <time>20:00:02</time>
 <version>
  <release>2.2.8</release>
  <api>2.2.8</api>
 </version>
 <stability>
  <release>stable</release>
  <api>stable</api>
 </stability>
 <license uri="http://www.php.net/license">PHP</license>
 <notes>
phpredis 2.2.8

The main improvement in this version of phpredis is support for Redis
Cluster.  This version of phpredis is intended for versions of php older
than 7.

In addition there have been many bug fixes and improvements to non cluster
related commands, which are listed below.

I&apos;ve attempted to include everyone who contribued to the project in each fix
description and have included names or github user ids.

Thanks to everyone for submitting bug reports and pull requests.  A special
thanks to Remi Collet for helping with any and all packaging related issues

\o/

--- Improvements ---

* Added randomization to our seed nodes to balance which instance is used
  to map the keyspace (Vitaliy Stepanyuk) [32eb1c5f]
* Added support for IPv6 addresses

--- Fixes ---

* PHP liveness checking workaround (Shafreeck Sea) [c18d58b9]
* Various documentation and code formatting and style fixes (ares333,
  sanpili, Bryan Nelson, linfangrong, Romero Malaquias, Viktor Szépe)
* Fix scan reply processing to use long instead of int to avoid overflow
  (mixiaojiong).
* Fix potential segfault in Redis Cluster session storage (Sergei Lomakov)
  [cc15aae]
* Fixed memory leak in discard function [17b1f427]
* Sanity check for igbinary unserialization (Maurus Cuelenaere) [3266b222, 
  5528297a]
* Fix segfault occuring from unclosed socket connection for Redis Cluster
  (CatKang) [04196aee]
* Case insensitive zRangeByScore options
* Fixed dreaded size_t vs long long compiler warning
 </notes>
 <contents>
  <dir name="/">
   <file md5sum="3f6dc4687693b332dd1b0569190ef306" name="tests/RedisArrayTest.php" role="test" />
   <file md5sum="415bba9c4dd6fa38c69857dc4fcf65f0" name="tests/RedisClusterTest.php" role="test" />
   <file md5sum="d3f4ff23f23a42a9c18d2a4c6af232d1" name="tests/RedisTest.php" role="test" />
   <file md5sum="ed860333967031d2575d08931406ce1c" name="tests/TestRedis.php" role="test" />
   <file md5sum="3c77a9738c40b9777bd9e3529553a84b" name="tests/TestSuite.php" role="test" />
   <file md5sum="91a9744e1472465cda5133f1bd4bf2eb" name="tests/make-cluster.sh" role="test" />
   <file md5sum="e9ddcb5f7abcef8507c394d8386f4742" name="tests/mkring.sh" role="test" />
   <file md5sum="101141c62f2591af97576d9048e0bf0b" name="README.markdown" role="doc" />
   <file md5sum="fe0a0a3a745b2903a9b0c689150bc8b9" name="arrays.markdown" role="doc" />
   <file md5sum="9b1afab3bd4a953f0be59f32f3f2cfad" name="cluster.markdown" role="doc" />
   <file md5sum="d56374bf738d2b10cb1f97cd7c9cfb30" name="CREDITS" role="doc" />
   <file md5sum="cb564efdf78cce8ea6e4b5a4f7c05d97" name="COPYING" role="doc" />
   <file md5sum="3de6221eef4f2f4f9b216965006a445b" name="config.m4" role="src" />
   <file md5sum="65f6212ad1d32acbac3a6a9a37e95355" name="config.w32" role="src" />
   <file md5sum="5dd6a5ff770d88c6bc7a7ca9442e252e" name="common.h" role="src" />
   <file md5sum="0fedff25c792da9899c3fc8d80b710e1" name="library.c" role="src" />
   <file md5sum="48aaf9539b11eb41c999f8960c3547ef" name="library.h" role="src" />
   <file md5sum="9d4bbfc6349ff20242c2f2d0c1ddb121" name="php_redis.h" role="src" />
   <file md5sum="a03f33bf77690551f41868f5c29c1f13" name="redis_array.c" role="src" />
   <file md5sum="73f53430cdcf4e54bc635fac76d0ebc6" name="redis_array.h" role="src" />
   <file md5sum="55436b39dbf07eb542a818fc7f62ed3f" name="redis_array_impl.c" role="src" />
   <file md5sum="a0abca9519053797e74caccb5a381027" name="redis_array_impl.h" role="src" />
   <file md5sum="36f4e9615de9a471efdbe235b8b0b8e7" name="redis_cluster.c" role="src" />
   <file md5sum="fbac7c6343f36aee4e33cb9991bd7165" name="redis_cluster.h" role="src" />
   <file md5sum="bb85c5a31061ac1087f5a1182596306c" name="cluster_library.c" role="src" />
   <file md5sum="5dc09b44968eb04f92fb8e3ad5c7b62a" name="cluster_library.h" role="src" />
   <file md5sum="137422eae5e428564d022abc45e24340" name="redis_commands.c" role="src" />
   <file md5sum="cbffcd8053fc3152a1ea68531d1aefad" name="redis_commands.h" role="src" />
   <file md5sum="4d7c62ee3750ceaebc022fdff4ffadda" name="redis.c" role="src" />
   <file md5sum="b21982c70ca8292b4ac540a76cd3bac4" name="crc16.h" role="src" />
   <file md5sum="64a898f59ffb0b066388794fd5810945" name="redis_session.c" role="src" />
   <file md5sum="be7c5140b93be49b39eb0a91bc5ed303" name="redis_session.h" role="src" />
  </dir>
 </contents>
 <dependencies>
  <required>
   <php>
    <min>5.2.0</min>
    <max>6.0.0</max>
    <exclude>6.0.0</exclude>
   </php>
   <pearinstaller>
    <min>1.4.0b1</min>
   </pearinstaller>
  </required>
 </dependencies>
 <providesextension>redis</providesextension>
 <extsrcrelease />
 <changelog>
  <release>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <version>
    <release>2.2.8</release>
    <api>2.2.8</api>
   </version>
   <date>2016-06-08</date>
   <notes>
phpredis 2.2.8

The main improvement in this version of phpredis is support for Redis
Cluster.  This version of phpredis is intended for versions of php older
than 7.

In addition there have been many bug fixes and improvements to non cluster
related commands, which are listed below.

I&apos;ve attempted to include everyone who contribued to the project in each fix
description and have included names or github user ids.

Thanks to everyone for submitting bug reports and pull requests.  A special
thanks to Remi Collet for helping with any and all packaging related issues

\o/

--- Improvements ---

* Added randomization to our seed nodes to balance which instance is used
  to map the keyspace (Vitaliy Stepanyuk) [32eb1c5f]
* Added support for IPv6 addresses

--- Fixes ---

* PHP liveness checking workaround (Shafreeck Sea) [c18d58b9]
* Various documentation and code formatting and style fixes (ares333,
  sanpili, Bryan Nelson, linfangrong, Romero Malaquias, Viktor Szépe)
* Fix scan reply processing to use long instead of int to avoid overflow
  (mixiaojiong).
* Fix potential segfault in Redis Cluster session storage (Sergei Lomakov)
  [cc15aae]
* Fixed memory leak in discard function [17b1f427]
* Sanity check for igbinary unserialization (Maurus Cuelenaere) [3266b222,
  5528297a]
* Fix segfault occuring from unclosed socket connection for Redis Cluster
  (CatKang) [04196aee]
* Case insensitive zRangeByScore options
* Fixed dreaded size_t vs long long compiler warning
   </notes>
  </release>
  <release>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <version>
    <release>2.2.7</release>
    <api>2.2.7</api>
   </version>
   <date>2015-03-03</date>
   <notes>
phpredis 2.2.7

 -- Improvements ---

 * Implemented PFADD, PFMERGE, and PFCOUNT command handling
 * Implemented ZRANGEBYLEX command (holding off on ZREVRANGEBYLEX
   as that won&apos;t be out until 3.0)
 * Implemented getMode() so clients can detect whether we&apos;re in
   ATOMIC/MULTI/PIPELINE mode.
 * Implemented rawCommand() so clients can send arbitrary things to
   the redis server
 * Implemented DEBUG OBJECT (@michael-grunder, @isage)
 * Added/abide by connect timeout for RedisArray
 * Select to the last selected DB when phpredis reconnects

 -- Fixes ---

 * Fix a possible invalid free in _serialize
 * Added SAVE and BGSAVE to &quot;distributable&quot; commands for RedisArray
 * @welting -- Fixed invalid &quot;argc&quot; calculation re HLL commands
 * Allow clients to break out of the subscribe loop and return context.
 * Fixes a memory leak in SCAN when OPT_SCAN_RETRY id.
 * @remicollet -- Fix possible segfault when igbinary is enabled.
 * Add a couple of cases where we throw on an error (LOADING/NOAUTH/MASTERDOWN)
 * Fix several issues with serialization NARY
 * @itcom -- Fix missing TSRMLS_CC and a TSRMLS_DC/TSRMLS_CC typo
   </notes>
  </release>
  <release>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <version>
    <release>2.2.5</release>
    <api>2.2.5</api>
   </version>
   <date>2014-03-15</date>
   <notes>
phpredis 2.2.5

This is a minor release with several bug fixes as well as additions to support
new commands that have been introduced to Redis since our last release.

A special thanks to everyone who helps the project by commenting on issues and
submitting pull requests!  :)

[NEW] Support for the BITPOS command
[NEW] Connection timeout option for RedisArray (@MikeToString)
[NEW] A _serialize method, to complement our existing _unserialize method
[NEW] Support for the PUBSUB command
[NEW] Support for SCAN, SSCAN, HSCAN, and ZSCAN
[NEW] Support for the WAIT command

[FIX] Handle the COPY and REPLACE arguments for the MIGRATE command

[DOC] Fix syntax error in documentation for the SET command (@mithunsatheesh)
[DOC] Homebrew documentation instructions (@mathias)
   </notes>
  </release>
  <release>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <version>
    <release>2.2.4</release>
    <api>2.2.4</api>
   </version>
   <date>2013-09-01</date>
   <notes>
**
** Features / Improvements
**

* Randomized reconnect delay for RedisArray @mobli
  This feature adds an optional parameter when constructing a RedisArray object
  such that a random delay will be introduced if reconnections are made,
  mitigating any &apos;thundering herd&apos; type problems.

* Lazy connections to RedisArray servers @mobli
  By default, RedisArray will attempt to connect to each server you pass in
  the ring on construction.  This feature lets you specify that you would
  rather have RedisArray only attempt a connection when it needs to get data
  from a particular node (throughput/performance improvement).

* Allow LONG and STRING keys in MGET/MSET
* Extended SET options for Redis &gt;= 2.6.12
* Persistent connections and UNIX SOCKET support for RedisArray
* Allow aggregates for ZUNION/ZINTER without weights @mheijkoop
* Support for SLOWLOG command
* Reworked MGET algorithm to run in linear time regardless of key count.
* Reworked ZINTERSTORE/ZUNIONSTORE algorithm to run in linear time

**
** Bug fixes
**

* C99 Compliance (or rather lack thereof) fix @mobli
* Added ZEND_ACC_CTOR and ZEND_ACC_DTOR @euskadi31
* Stop throwing and clearing an exception on connect failure @matmoi
* Fix a false positive unit test failure having to do with TTL returns
   </notes>
  </release>
  <release>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <version>
    <release>2.2.3</release>
    <api>2.2.3</api>
   </version>
   <date>2013-04-29</date>
   <notes>
First release to PECL
   </notes>
  </release>
 </changelog>
</package>
